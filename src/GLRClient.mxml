<?xml version="1.0" encoding="utf-8"?>
<s:TabbedViewNavigatorApplication xmlns:fx="http://ns.adobe.com/mxml/2009" 
								  xmlns:s="library://ns.adobe.com/flex/spark"
								  splashScreenImage="@Embed('Default.png')"
								  splashScreenScaleMode="zoom"
								  preloader="components.MultiDPISplashScreen"
								  creationComplete="creationCompleteHandler(event)"
								  >
	<fx:Style source="styles/style.css"/>
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			import mx.core.IVisualElementContainer;
			
			import spark.components.View;
			import spark.events.ElementExistenceEvent;
			import spark.events.IndexChangeEvent;
			import spark.events.ViewNavigatorEvent;
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				// add back button for non-android OS
				if (Capabilities.version.indexOf("AND") != 0)
				{
					tabbedNavigator.addEventListener(IndexChangeEvent.CHANGING, indexChangingHandler);
					tabbedNavigator.addEventListener(IndexChangeEvent.CHANGE, indexChangeHandler);
					indexChangeHandler(null);
				}
			}
			
			protected function indexChangingHandler(event:IndexChangeEvent):void
			{
				// remove back button from previous navigator
				var previousNav:ViewNavigator = ViewNavigator(tabbedNavigator.getElementAt(event.oldIndex));
				
				if (previousNav.length > 1)
				{
					var backButtonParent:IVisualElementContainer = backButton.parent as IVisualElementContainer;
					if (backButtonParent)
						backButtonParent.removeElement(backButton);
					
					removeBackButton(previousNav.activeView);
				}
			}
			
			protected function indexChangeHandler(event:IndexChangeEvent):void
			{
				if (!tabbedNavigator.selectedNavigator)
					return;
				
				// install listeners on the active ViewNavigator
				var viewNav:ViewNavigator = ViewNavigator(tabbedNavigator.selectedNavigator);
				viewNav.addEventListener(ElementExistenceEvent.ELEMENT_ADD, elementAdded);
				viewNav.addEventListener(ElementExistenceEvent.ELEMENT_REMOVE, elementRemoved);
				
				// add back button to the new navigator if it still has history
				if (viewNav.length > 1)
					addBackButton(viewNav.activeView);
			}
			
			protected function backButton_clickHandler(event:MouseEvent):void
			{
				ViewNavigator(tabbedNavigator.selectedNavigator).popView();
			}
			
			protected function elementAdded(event:ElementExistenceEvent):void
			{
				if (ViewNavigator(tabbedNavigator.selectedNavigator).length > 1)
				{
					var view:View = View(event.element);
					
					if (view)
						addBackButton(view);
				}
			}
			
			protected function addBackButton(view:View):void
			{
				// add backButton to the pending View's navigationContent
				// so that it animates in
				if (!view.navigationContent
					|| view.navigationContent.length == 0
					|| (view.navigationContent.length == 1 && view.navigationContent[0] == backButton))
				{
					view.navigationContent = [backButton];
				}
			}
			
			protected function elementRemoved(event:ElementExistenceEvent):void
			{
				var view:View = View(event.element);
				
				if (view)
					removeBackButton(view);
			}
			
			protected function removeBackButton(view:View):void
			{
				if (view.navigationContent
					&& view.navigationContent.length == 1
					&& view.navigationContent[0] == backButton)
				{
					view.navigationContent = [];
				}
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:Button id="backButton" label="返回" click="backButton_clickHandler(event)"/>
	</fx:Declarations>
	<s:ViewNavigator label="首页" width="100%" height="100%" firstView="views.HomeView" icon="@Embed(source='assets/icon-home.png')"/>
	<s:ViewNavigator label="频道" width="100%" height="100%" firstView="views.ChannelView" icon="@Embed(source='assets/icon-channel.png')"/>
	<s:ViewNavigator label="搜索" width="100%" height="100%" firstView="views.SearchView" icon="@Embed(source='assets/icon-search.png')"/>
	<s:ViewNavigator label="历史" width="100%" height="100%" firstView="views.HistoryView" icon="@Embed(source='assets/icon-history.png')"/>
	<s:ViewNavigator label="设置" width="100%" height="100%" firstView="views.ProfileView" icon="@Embed(source='assets/icon-profile.png')"/>
</s:TabbedViewNavigatorApplication>
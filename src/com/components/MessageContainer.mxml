<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark"  height="100%" xmlns:renderers="renderers.*">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		
		<s:ArrayList id="messageList"/>
		
		
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			import mx.events.PropertyChangeEvent;
			
			import spark.core.NavigationUnit;
			import spark.events.IndexChangeEvent;
			
			private var messageArr:Array = new Array();

           public function addMessage(msg:Object):void{
			   
			   messageArr.push(msg);
			   messageList.source = messageArr
			   scrollToBottom();
			  
		   }
			
			
		   
			
			
		   public function refreshMessage(msgArr:Array):void{
				
			   //trace("refresh messages")
			   messageArr = msgArr;
			   
			   messageList.source = messageArr;
			   scrollToBottom();
			   
			 //  list.invalidateDisplayList();
		   }
			
			
			private function scrollToBottom():void {
				// update the verticalScrollPosition to the end of the List
				// virtual layout may require us to validate a few times
				var delta:Number = 0;
				var count:int = 0;
				while (count++ < 10) {
					list.validateNow();
					delta = list.layout.getVerticalScrollPositionDelta(NavigationUnit.END);
					list.layout.verticalScrollPosition += delta;
					trace('count='+count+', delta='+delta+', verticalScrollPosition='+list.layout.verticalScrollPosition);
					if (delta == 0)
						break;
				}
			}
			
		]]>
	</fx:Script>
	
	<s:VGroup width="330" height="100%" alpha="1" >
		
		<s:Group width="330" height="100%" alpha="1" >
		
		<s:Rect id="rect" width="100%" height="100%" radiusX="10" topRightRadiusX="0" bottomRightRadiusX="0" alpha="0.8">
			<s:fill>
				<s:SolidColor color="#333333"/>
			</s:fill>
		</s:Rect>
		
		<s:List y="10" visible="true" id="list" width="100%" height="95%" dataProvider="{messageList}"  contentBackgroundAlpha="0">
			<s:itemRenderer>
				<fx:Component>
					<renderers:MessageItemRenderer iconWidth="38" iconHeight="38"
												  iconFillMode="clip" iconScaleMode="letterbox"
												  iconPlaceholder="@Embed('assets/icon_head.png')"
												  iconFunction = "getIcon"
												  messageFunction="getMessage"
												  messageStyleName="messageListItem"
												  >
						<fx:Script>
							<![CDATA[
								private function getIcon(item:Object):String{
									
									return  item.value.avatar;
								}
								
								private function getMessage(item:Object):String{
									return item.value.value;
								}
							]]>
						</fx:Script>
					</renderers:MessageItemRenderer>
				</fx:Component>
			</s:itemRenderer>
		</s:List>
		
	   </s:Group>
		<!--<s:HGroup id="buttonBar" width="100%" height="20" verticalAlign="middle" >
			<s:Spacer width="100%"/>
			<s:Label text="online students number:" fontSize="15" height="60" verticalAlign="middle"/>
			
			<s:Spacer width="100%"/>
		</s:HGroup>-->
	
		<s:Spacer height="120"/>
	
	</s:VGroup>
	
	
</s:Group>
